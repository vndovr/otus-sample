quarkus.http.port=8000

quarkus.swagger-ui.enable = true
quarkus.swagger-ui.always-include=true

#quarkus.datasource.db-kind = H2
#quarkus.datasource.jdbc.driver=org.h2.Driver
quarkus.datasource.jdbc.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1

quarkus.datasource.db-kind = postgresql
quarkus.datasource.jdbc.driver = org.postgresql.Driver
#quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres
#quarkus.datasource.username = postgres
#quarkus.datasource.password = password

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.log.sql = true
quarkus.hibernate-orm.log.format-sql = true
quarkus.hibernate-orm.database.geneneration =  none
quarkus.hibernate-orm.implicit-naming-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

quarkus.flyway.migrate-at-start=true

# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:9092

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.order-events-in.connector=smallrye-kafka
mp.messaging.incoming.order-events-in.topic=order-events
mp.messaging.incoming.order-events-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.order-events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.order-events-out.connector=smallrye-kafka
mp.messaging.outgoing.order-events-out.topic=order-events
mp.messaging.outgoing.order-events-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.order-events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer